package Six;

import java.util.ArrayList;
import java.util.Random;
import java.util.Scanner;

public class RandomNumber {
	private ArrayList<Integer> List = null;
	private ArrayList<Integer> odd_Array = null;
	private ArrayList<Integer> even_Array = null;
	private int odd_sum = 0;
	private int even_sum = 0;
	private int enterNum = 0;
	private int sum = 0;
	
	public void inputNumber() { // N개의 랜덤함수를 입력받고 > 무작위로 수 넣어주기 (난수생성)
		System.out.println("N개의 랜덤함수");
		Scanner sc = new Scanner(System.in);
		int enterNum = sc.nextInt();
		System.out.println("<" + enterNum + "> 개의 랜덤함수");
		
		inputRandom(enterNum);
	}
	
	public void inputRandom(int enterNum) { 	//랜덤숫자도출
		Random rd = new Random();
		for (int i = 0; i < enterNum; i++) {
			List.add((int) (rd.nextInt(100) + 1));
		}
	}
	
	public void Main() {
		int size = this.List.size();
		for (int i = 0; i < size; i++) {
			enterNum = List.get(i);
			sum += enterNum; // 리스트 총 합계 sum 값~

			if (enterNum % 2 == 0) {
				odd_sum += List.get(i); // 아니이거 for문을 또 만들어야 하나
				odd_Array.add(enterNum);
			} else if (enterNum % 2 != 0) {
				even_sum += List.get(i);
				even_Array.add(enterNum); // 홀수~
			}
		}

		findDefalt(); // 디폴트 찾수 찾기 L5 => findDefalt
		findDefalt(1); // 어떻게 되냐면 저기로 값을 넣어주고 여기서 당장 실행
		findDefalt(2); // 실행 구문을 다 돌고 나온다음에 다음 줄 실행
		bigLength(odd_Array, even_Array); // L6 =>bigLength
		decisionLength(odd_Array, even_Array); // L7 =>decisionLength

		System.out.println("combineConst호출완료");
		System.out.println("");
	}

	// 디폴트 짝수 찾기
	public void findDefalt() {
		findDefalt(1);
	}

	public void findDefalt(int print_type) { // 홀수의 N개가 있다. > 아니 홀수와 짝수를 리스트로 받아줘야 댐
		String print_str;

		if (print_type == 1) {
			print_str = "짝수";
			System.out.println(even_Array + " : " + print_str);
		} else if (print_type == 2) {
			print_str = "홀수";
			System.out.println(odd_Array + " : " + print_str);
		}
	}


}
